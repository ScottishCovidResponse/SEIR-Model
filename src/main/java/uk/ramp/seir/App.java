/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package uk.ramp.seir;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import uk.ramp.seir.io.Output;
import uk.ramp.seir.io.PropertiesReader;
import uk.ramp.seir.ode.OdeProperties;
import uk.ramp.seir.population.SeirRecord;

import java.util.HashMap;
import java.util.Map;

import static uk.ramp.seir.ode.OdeEquations.*;


public class App {
    private static final Logger LOGGER = LogManager.getLogger(App.class);
    Map<Integer, SeirRecord> records = new HashMap<>();

    public static void main(String[] args) {

        App app = new App();
        app.run();

    }

    void run() {

        PropertiesReader reader = new PropertiesReader("odeProperties.json", "properties.json");

        int t0 = reader.getT0();
        int tMax = reader.gettMax();

        OdeProperties props = reader.getOdeProperties();
        SeirRecord population = reader.getInitialPopulation();

        LOGGER.info("{}   {}   {}   {}   {}", t0, population.getS(), population.getE(), population.getI(), population.getR());

        calculate(tMax, props, population);

        Output.printSeirCSV(records, "SEIR.csv");


    }

    void calculate(int tMax, OdeProperties props, SeirRecord pop) {

        for (int t = 0; t < tMax; t++) {

            records.put(t, pop);

            double dsDt = calculateDsDt(props, pop);
            double deDt = calculateDeDt(props, pop);
            double diDt = calculateDiDt(props, pop);
            double drDt = calculateDrDt(props, pop);

            double n = pop.getN();
            double s = pop.getS() + dsDt;
            double e = pop.getE() + deDt;
            double i = pop.getI() + diDt;
            double r = pop.getR() + drDt;

            LOGGER.info("{}   {}   {}   {}   {}   {}", t + 1, s, e, i, r, n);

            pop = new SeirRecord(t, n, s, e, i, r);

        }
    }


}
